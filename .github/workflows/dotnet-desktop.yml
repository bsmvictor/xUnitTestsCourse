name: CI/CD Pipeline for .NET Core

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # Job 1: Testes
  tests:
    runs-on: windows-latest  # Utilizando Windows como ambiente de execução
    strategy:
      matrix:
        configuration: [Debug, Release]

    steps:
    - name: Checkout do código
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Instalar o .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    - name: Restaurar pacotes do NuGet
      run: dotnet restore

    - name: Executar testes unitários
      run: dotnet test --configuration ${{ matrix.configuration }} --logger "trx;LogFileName=TestResults_${{ matrix.configuration }}.trx"

    - name: Publicar relatórios de teste
      uses: actions/upload-artifact@v4
      with:
        name: TestResults_${{ matrix.configuration }}_${{ github.run_id }}
        path: '**/*.trx'

  # Job 2: Empacotamento (Build)
  build:
    runs-on: windows-latest
    needs: tests # Executa o build após os testes serem concluídos
    strategy:
      matrix:
        configuration: [Debug, Release]

    steps:
    - name: Checkout do código
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Instalar o .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    - name: Restaurar pacotes do NuGet
      run: dotnet restore

    - name: Compilar o projeto
      run: dotnet build --configuration ${{ matrix.configuration }}

    - name: Publicar artefatos de build
      uses: actions/upload-artifact@v4
      with:
        name: Build_${{ matrix.configuration }}_${{ github.run_id }}
        path: '**/bin/${{ matrix.configuration }}/'

  # Job 3: Notificação (rodando em paralelo)
  notification:
    runs-on: ubuntu-latest
    needs: [tests, build] # Roda após os testes e build
    steps:
    - name: Install mailutils
      run: sudo apt-get update && sudo apt-get install -y mailutils

    - name: Send notification
      env:
        EMAIL: ${{ secrets.EMAIL }}
      run: echo "Pipeline executado com sucesso!" | mail -s "Notificação CI/CD" $EMAIL
