name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job 1: Testes
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v2

      - name: Configurar .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.0.x'

      - name: Restaurar pacotes do NuGet
        run: dotnet restore

      - name: Executar testes
        run: dotnet test --logger "trx;LogFileName=TestResults.trx"

      - name: Publicar relatórios de teste
        uses: actions/upload-artifact@v2
        with:
          name: TestResults
          path: TestResults.trx

  # Job 2: Empacotamento (Build)
  build:
    runs-on: ubuntu-latest
    needs: tests # Depende dos testes
    steps:
      - name: Checkout do código
        uses: actions/checkout@v2

      - name: Configurar .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.0.x'

      - name: Restaurar pacotes do NuGet
        run: dotnet restore

      - name: Compilar o projeto
        run: dotnet build --configuration Release

      - name: Publicar artefato
        uses: actions/upload-artifact@v2
        with:
          name: Build
          path: ./bin/Release/

  # Job 3: Notificação
  notification:
    runs-on: ubuntu-latest
    needs: [tests, build] # Executa após os testes e o build
    steps:
      - name: Enviar notificação por e-mail
        run: |
          echo "Pipeline executado com sucesso!" | mail -s "Notificação CI/CD" ${{ secrets.EMAIL }}

